(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function e(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=e(s);fetch(s.href,n)}})();class h{constructor(t,e){this.container=t,this.onClick=e,this.button=null}render(){return this.button=document.createElement("button"),this.button.className="chatbot-floating-btn",this.button.setAttribute("aria-label","채팅 열기"),this.button.innerHTML=`
      <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2">
        <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
      </svg>
    `,this.button.addEventListener("click",()=>{this.onClick()}),this.container.appendChild(this.button),this.button}hide(){this.button&&(this.button.style.display="none")}show(){this.button&&(this.button.style.display="flex")}}class r{constructor(t,e){this.container=t,this.options=e,this.header=null}render(){this.header=document.createElement("div"),this.header.className="chatbot-header";const t=document.createElement("div");t.className="chatbot-header-info";const e=document.createElement("h3");e.className="chatbot-header-title",e.textContent=this.options.title||"고객센터";const i=document.createElement("p");i.className="chatbot-header-subtitle",i.textContent=this.options.subtitle||"무엇을 도와드릴까요?",t.appendChild(e),t.appendChild(i);const s=document.createElement("button");return s.className="chatbot-header-close",s.setAttribute("aria-label","닫기"),s.innerHTML=`
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    `,s.addEventListener("click",()=>{this.options.onClose&&this.options.onClose()}),this.header.appendChild(t),this.header.appendChild(s),this.container.appendChild(this.header),this.header}}class l{constructor(t,e){this.container=t,this.message=e,this.bubble=null}render(){this.bubble=document.createElement("div"),this.bubble.className=`chatbot-bubble ${this.message.role.toLowerCase()}`;const t=document.createElement("div");t.className="chatbot-bubble-content",t.textContent=this.message.content,t.innerHTML=this.formatContent(this.message.content);const e=document.createElement("div");return e.className="chatbot-bubble-time",e.textContent=this.formatTime(this.message.createdAt||new Date),this.bubble.appendChild(t),this.bubble.appendChild(e),this.container.appendChild(this.bubble),this.bubble}formatContent(t){return t.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/\*(.*?)\*/g,"<em>$1</em>").replace(/\n/g,"<br>")}formatTime(t){const e=new Date(t),i=e.getHours().toString().padStart(2,"0"),s=e.getMinutes().toString().padStart(2,"0");return`${i}:${s}`}}class c{constructor(t){this.container=t,this.list=null,this.messages=[],this.typingIndicator=null}render(){return this.list=document.createElement("div"),this.list.className="chatbot-message-list",this.container.appendChild(this.list),this.list}addMessage(t){const e=new l(this.list,t);e.render(),this.messages.push(e),this.scrollToBottom()}showTypingIndicator(){this.typingIndicator||(this.typingIndicator=document.createElement("div"),this.typingIndicator.className="chatbot-typing-indicator",this.typingIndicator.innerHTML=`
      <div class="chatbot-bubble assistant">
        <div class="chatbot-typing-dots">
          <span></span>
          <span></span>
          <span></span>
        </div>
      </div>
    `,this.list.appendChild(this.typingIndicator),this.scrollToBottom())}hideTypingIndicator(){this.typingIndicator&&(this.typingIndicator.remove(),this.typingIndicator=null)}scrollToBottom(){this.list&&setTimeout(()=>{this.list.scrollTop=this.list.scrollHeight},100)}clear(){this.list&&(this.list.innerHTML="",this.messages=[])}}class d{constructor(t,e){this.container=t,this.onClick=e,this.repliesContainer=null,this.replies=[]}render(){return this.repliesContainer=document.createElement("div"),this.repliesContainer.className="chatbot-quick-replies",this.repliesContainer.style.display="none",this.container.appendChild(this.repliesContainer),this.repliesContainer}setReplies(t){if(this.repliesContainer){if(this.replies=t||[],this.repliesContainer.innerHTML="",this.replies.length===0){this.repliesContainer.style.display="none";return}this.repliesContainer.style.display="flex",this.replies.forEach(e=>{const i=document.createElement("button");if(i.className="chatbot-quick-reply-btn",e.icon){const n=document.createElement("span");n.className="chatbot-quick-reply-icon",n.textContent=e.icon,i.appendChild(n)}const s=document.createElement("span");s.textContent=e.label,i.appendChild(s),i.addEventListener("click",()=>{this.onClick&&this.onClick(e.value),this.repliesContainer.style.display="none"}),this.repliesContainer.appendChild(i)})}}}class u{constructor(t,e){this.container=t,this.onSend=e,this.inputContainer=null,this.input=null,this.sendBtn=null}render(){return this.inputContainer=document.createElement("div"),this.inputContainer.className="chatbot-input-container",this.input=document.createElement("input"),this.input.type="text",this.input.className="chatbot-input",this.input.placeholder="메시지를 입력하세요...",this.input.setAttribute("maxlength","10000"),this.input.addEventListener("keypress",t=>{t.key==="Enter"&&!t.shiftKey&&(t.preventDefault(),this.send())}),this.sendBtn=document.createElement("button"),this.sendBtn.className="chatbot-send-btn",this.sendBtn.setAttribute("aria-label","전송"),this.sendBtn.innerHTML=`
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <line x1="22" y1="2" x2="11" y2="13"></line>
        <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
      </svg>
    `,this.sendBtn.addEventListener("click",()=>this.send()),this.inputContainer.appendChild(this.input),this.inputContainer.appendChild(this.sendBtn),this.container.appendChild(this.inputContainer),this.inputContainer}send(){const t=this.input.value.trim();t&&this.onSend&&(this.onSend(t),this.input.value="")}focus(){this.input&&setTimeout(()=>{this.input.focus()},100)}setDisabled(t){this.input&&(this.input.disabled=t),this.sendBtn&&(this.sendBtn.disabled=t)}}class p{constructor(t,e){this.container=t,this.config=e,this.window=null,this.header=null,this.messageList=null,this.quickReplies=null,this.inputBox=null,this.isVisible=!1,this.onClose=null,this.onSendMessage=null}render(){this.window=document.createElement("div"),this.window.className="chatbot-window",this.window.style.display="none",this.header=new r(this.window,{title:this.config.title||"고객센터",subtitle:this.config.subtitle||"무엇을 도와드릴까요?",onClose:()=>this.close()}),this.header.render();const t=document.createElement("div");return t.className="chatbot-message-container",this.messageList=new c(t),this.messageList.render(),this.quickReplies=new d(t,e=>{this.onSendMessage&&this.onSendMessage(e)}),this.quickReplies.render(),this.window.appendChild(t),this.inputBox=new u(this.window,e=>{this.onSendMessage&&this.onSendMessage(e)}),this.inputBox.render(),this.container.appendChild(this.window),this.window}open(){this.window&&(this.window.style.display="flex",this.isVisible=!0,this.inputBox.focus())}close(){this.window&&(this.window.style.display="none",this.isVisible=!1,this.onClose&&this.onClose())}toggle(){this.isVisible?this.close():this.open()}addMessage(t){this.messageList&&this.messageList.addMessage(t)}setQuickReplies(t){this.quickReplies&&this.quickReplies.setReplies(t)}setLoading(t){this.inputBox&&this.inputBox.setDisabled(t),t&&this.messageList?this.messageList.showTypingIndicator():this.messageList&&this.messageList.hideTypingIndicator()}}class m{constructor(t={}){this.config={apiUrl:t.apiUrl||window.location.origin,title:t.title||"고객센터",subtitle:t.subtitle||"무엇을 도와드릴까요?",primaryColor:t.primaryColor||"#E17055",...t},this.container=null,this.shadowRoot=null,this.floatingButton=null,this.chatWindow=null,this.sessionToken=null,console.log("Chatbot Widget initialized",this.config)}async init(){this.container=document.createElement("div"),this.container.className="chatbot-widget",this.shadowRoot=this.container.attachShadow({mode:"open"});const t=document.createElement("link");t.rel="stylesheet",t.href=`${this.config.apiUrl}/widget/styles.css`,this.shadowRoot.appendChild(t);const e=document.createElement("div");if(e.className="chatbot-widget",this.shadowRoot.appendChild(e),this.config.primaryColor){const i=document.createElement("style");i.textContent=`:root { --primary-color: ${this.config.primaryColor}; }`,this.shadowRoot.appendChild(i)}this.floatingButton=new h(e,()=>{this.toggleChat()}),this.floatingButton.render(),this.chatWindow=new p(e,this.config),this.chatWindow.render(),this.chatWindow.onClose=()=>{this.floatingButton.show()},this.chatWindow.onSendMessage=i=>{this.sendMessage(i)},document.body.appendChild(this.container),await this.createSession(),console.log("Chatbot Widget ready")}async createSession(){try{const t=await fetch(`${this.config.apiUrl}/api/chatbot/sessions`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:this.config.userId})});if(!t.ok)throw new Error("Failed to create session");const e=await t.json();this.sessionToken=e.sessionToken,e.quickReplies&&e.quickReplies.length>0&&this.chatWindow.setQuickReplies(e.quickReplies),this.config.welcomeMessage&&this.chatWindow.addMessage({role:"ASSISTANT",content:this.config.welcomeMessage,createdAt:new Date})}catch(t){console.error("Failed to create session:",t)}}toggleChat(){this.chatWindow.toggle(),this.chatWindow.isVisible?this.floatingButton.hide():this.floatingButton.show()}async sendMessage(t){if(!this.sessionToken){console.error("No session token available");return}this.chatWindow.addMessage({role:"USER",content:t,createdAt:new Date}),this.chatWindow.setQuickReplies([]),this.chatWindow.setLoading(!0);try{const e=await fetch(`${this.config.apiUrl}/api/chatbot/messages`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:t,sessionToken:this.sessionToken})});if(!e.ok)throw new Error("Failed to send message");const i=await e.json();this.chatWindow.setLoading(!1),this.chatWindow.addMessage({role:"ASSISTANT",content:i.content,metadata:i.metadata,createdAt:i.createdAt}),i.quickReplies&&i.quickReplies.length>0&&this.chatWindow.setQuickReplies(i.quickReplies)}catch(e){console.error("Failed to send message:",e),this.chatWindow.setLoading(!1),this.chatWindow.addMessage({role:"ASSISTANT",content:"죄송합니다. 메시지 전송에 실패했습니다. 다시 시도해주세요.",createdAt:new Date})}}destroy(){this.container&&this.container.remove()}}window.chatbot=function(){const o=Array.from(arguments);if(o[0]==="init"){const e=o[1]||{},i=new m(e);return i.init(),i}};
